package {{.RouteName}}

import (
	"base/core/module"

	"github.com/gin-gonic/gin"
	"gorm.io/gorm"
)

type {{.StructName}}Module struct {
	module.DefaultModule
	DB         *gorm.DB
	Controller *{{.StructName}}Controller
	Service    *{{.StructName}}Service
}

func New{{.StructName}}Module(db *gorm.DB, router *gin.RouterGroup) module.Module {
	service := New{{.StructName}}Service(db)
	controller := New{{.StructName}}Controller(service)

	{{.RouteName}}Module := &{{.StructName}}Module{
		DB:         db,
		Controller: controller,
		Service:    service,
	}

	{{.RouteName}}Module.Routes(router)
	{{.RouteName}}Module.Migrate()

	return {{.RouteName}}Module
}

func (m *{{.StructName}}Module) Routes(router *gin.RouterGroup) {
	m.Controller.Routes(router)
}

func (m *{{.StructName}}Module) Migrate() error {
	return m.DB.AutoMigrate(&{{.StructName}}{})
}

func (m *{{.StructName}}Module) GetModels() []interface{} {
    return []interface{}{&{{.StructName}}{}}
}

