package {{.PackageName}}

import (
    "base/core/module"
    "base/app/models"
    "base/core/logger"
    "base/core/emitter"
    "base/core/storage"

    "github.com/gin-gonic/gin"
    "gorm.io/gorm"
)

type Module struct {
    module.DefaultModule
    DB         *gorm.DB
    Controller *{{.StructName}}Controller
    Service    *{{.StructName}}Service
    {{- if .HasImageField}}
    ActiveStorage *storage.ActiveStorage
    {{- end}}
}

func New{{.StructName}}Module(db *gorm.DB, router *gin.RouterGroup, log logger.Logger, emitter *emitter.Emitter, activeStorage *storage.ActiveStorage) module.Module {
    {{- range .Fields}}
    {{- if eq .AssociatedType "image"}}
    // Register image attachment configuration for {{.Name}}
    activeStorage.RegisterAttachment("{{toLower $.StructName}}", storage.AttachmentConfig{
        Field:             "{{.JSONName}}",
        MaxFileSize:       5 * 1024 * 1024, // 5MB
        AllowedExtensions: []string{".jpg", ".jpeg", ".png", ".gif", ".webp"},
    })
    {{- else if eq .AssociatedType "file"}}
    // Register file attachment configuration for {{.Name}}
    activeStorage.RegisterAttachment("{{toLower $.StructName}}", storage.AttachmentConfig{
        Field:             "{{.JSONName}}",
        MaxFileSize:       50 * 1024 * 1024, // 50MB
        AllowedExtensions: []string{".pdf", ".doc", ".docx", ".xls", ".xlsx", ".zip", ".rar"},
    })
    {{- end}}
    {{- end}}

    {{- if .HasImageField}}
    service := New{{.StructName}}Service(db, activeStorage)
    {{- else}}
    service := New{{.StructName}}Service(db)
    {{- end}}
    controller := New{{.StructName}}Controller(service, activeStorage)

    m := &Module{
        DB:         db,
        Controller: controller,
        Service:    service,
        {{- if .HasImageField}}
        ActiveStorage: activeStorage,
        {{- end}}
    }

    m.Routes(router)
    m.Migrate()

    return m
}

func (m *Module) Routes(router *gin.RouterGroup) {
    m.Controller.Routes(router)
}

func (m *Module) Migrate() error {
    return m.DB.AutoMigrate(&models.{{.StructName}}{})
}

func (m *Module) GetModels() []interface{} {
    return []interface{}{&models.{{.StructName}}{}}
}
